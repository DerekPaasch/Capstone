<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook original-version='18.1' source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Total_Lung_CA_pop+' inline='true' name='federated.0hbgkls0rddsdt19ob8h80ohlc9t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Total_Lung_CA_pop' name='textscan.1gtp2u50pubu8y12e6szc18qtwk0'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/derek/Documents/Nashville Software School/Capstone/Tableau CSV&apos;s/Total_Lung_CA_pop.csv' dataRefreshTime='' directory='C:/Users/derek/Documents/Nashville Software School/Capstone/Tableau CSV&apos;s' filename='C:/Users/derek/AppData/Local/Temp/TableauTemp/0hvpz280pab6dq16ungks13oxiks/Total_Lung_CA_pop.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='US_Liver_Join' name='textscan.0tsr0hl0gaf4eo18g2lop1pfb0p2'>
            <connection class='textscan' directory='C:/Users/derek/Documents/Nashville Software School/Capstone/data' filename='US_Liver_Join.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Alcohol_consumption.csv' table='[Alcohol_consumption#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:E420:no:A1:E420:1' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Variable' ordinal='0' />
            <column datatype='string' name='Measure' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='real' name='Litres per Person' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Total_Lung_CA_pop.csv' table='[Total_Lung_CA_pop#csv$]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:G376:no:A1:G376:1' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Variable' ordinal='0' />
              <column datatype='string' name='Measure' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='integer' name='Deaths' ordinal='4' />
              <column datatype='integer' name='Population' ordinal='5' />
              <column datatype='real' name='Total Deaths Percent' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Daily_Smokers.csv' table='[Daily_Smokers#csv$]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:E244:no:A1:E244:1' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Variable' ordinal='0' />
              <column datatype='string' name='Measure' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='real' name='Percent of Smokers' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Total_Liver_CA_pop.csv' table='[Total_Liver_CA_pop#csv$]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:G376:no:A1:G376:1' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Variable' ordinal='0' />
              <column datatype='string' name='Measure' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='integer' name='Deaths' ordinal='4' />
              <column datatype='integer' name='Population' ordinal='5' />
              <column datatype='real' name='Total Deaths Percent' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Alcohol_consumption.csv' table='[Alcohol_consumption#csv$]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:E420:no:A1:E420:1' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Variable' ordinal='0' />
              <column datatype='string' name='Measure' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='real' name='Litres per Person' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Total_US_Liver_CA_pop.csv' table='[Total_US_Liver_CA_pop#csv$]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:G10:no:A1:G10:1' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Variable' ordinal='0' />
              <column datatype='string' name='Measure' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='integer' name='Deaths' ordinal='4' />
              <column datatype='integer' name='Population' ordinal='5' />
              <column datatype='real' name='Total Deaths Percent' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.0tsr0hl0gaf4eo18g2lop1pfb0p2' name='US_Liver_Join.csv' table='[US_Liver_Join#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Variable_x' ordinal='0' />
              <column datatype='string' name='Measure_x' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='real' name='Deaths' ordinal='4' />
              <column datatype='integer' name='Population' ordinal='5' />
              <column datatype='real' name='Total Deaths Percent' ordinal='6' />
              <column datatype='string' name='Variable_y' ordinal='7' />
              <column datatype='string' name='Measure_y' ordinal='8' />
              <column datatype='real' name='Litres per Person' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.0tsr0hl0gaf4eo18g2lop1pfb0p2' name='US_Liver_smoking.csv' table='[US_Liver_smoking#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Variable_x' ordinal='0' />
              <column datatype='string' name='Measure_x' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='real' name='Deaths' ordinal='4' />
              <column datatype='integer' name='Population' ordinal='5' />
              <column datatype='real' name='Total Deaths Percent' ordinal='6' />
              <column datatype='string' name='Variable_y' ordinal='7' />
              <column datatype='string' name='Measure_y' ordinal='8' />
              <column datatype='real' name='Percent of Smokers' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Total_US_Liver_CA_pop.csv1' table='[Total_US_Liver_CA_pop#csv$]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:G10:no:A1:G10:1' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Variable' ordinal='0' />
              <column datatype='string' name='Measure' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='integer' name='Deaths' ordinal='4' />
              <column datatype='integer' name='Population' ordinal='5' />
              <column datatype='real' name='Total Deaths Percent' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Total_US_Lung_CA_pop.csv' table='[Total_US_Lung_CA_pop#csv$]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:G10:no:A1:G10:1' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Variable' ordinal='0' />
              <column datatype='string' name='Measure' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='integer' name='Deaths' ordinal='4' />
              <column datatype='integer' name='Population' ordinal='5' />
              <column datatype='real' name='Total Deaths Percent' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.0tsr0hl0gaf4eo18g2lop1pfb0p2' name='US_Lung_Join.csv' table='[US_Lung_Join#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Variable_x' ordinal='0' />
              <column datatype='string' name='Measure_x' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='real' name='Deaths' ordinal='4' />
              <column datatype='integer' name='Population' ordinal='5' />
              <column datatype='real' name='Total Deaths Percent' ordinal='6' />
              <column datatype='string' name='Variable_y' ordinal='7' />
              <column datatype='string' name='Measure_y' ordinal='8' />
              <column datatype='real' name='Percent of Smokers' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.0tsr0hl0gaf4eo18g2lop1pfb0p2' name='US_Lung_alcohol.csv' table='[US_Lung_alcohol#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Variable_x' ordinal='0' />
              <column datatype='string' name='Measure_x' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='real' name='Deaths' ordinal='4' />
              <column datatype='integer' name='Population' ordinal='5' />
              <column datatype='real' name='Total Deaths Percent' ordinal='6' />
              <column datatype='string' name='Variable_y' ordinal='7' />
              <column datatype='string' name='Measure_y' ordinal='8' />
              <column datatype='real' name='Litres per Person' ordinal='9' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Country (Alcohol_consumption.csv)]' value='[Alcohol_consumption.csv].[Country]' />
          <map key='[Country (Daily_Smokers.csv)]' value='[Daily_Smokers.csv].[Country]' />
          <map key='[Country (Total_Liver_CA_pop.csv)]' value='[Total_Liver_CA_pop.csv].[Country]' />
          <map key='[Country (Total_US_Liver_CA_pop.csv)]' value='[Total_US_Liver_CA_pop.csv].[Country]' />
          <map key='[Country (Total_US_Liver_CA_pop.csv1)]' value='[Total_US_Liver_CA_pop.csv1].[Country]' />
          <map key='[Country (Total_US_Lung_CA_pop.csv)]' value='[Total_US_Lung_CA_pop.csv].[Country]' />
          <map key='[Country (US_Liver_Join.csv)]' value='[US_Liver_Join.csv].[Country]' />
          <map key='[Country (US_Liver_smoking.csv)]' value='[US_Liver_smoking.csv].[Country]' />
          <map key='[Country (US_Lung_Join.csv)]' value='[US_Lung_Join.csv].[Country]' />
          <map key='[Country (US_Lung_alcohol.csv)]' value='[US_Lung_alcohol.csv].[Country]' />
          <map key='[Country]' value='[Total_Lung_CA_pop.csv].[Country]' />
          <map key='[Deaths (Total_Liver_CA_pop.csv)]' value='[Total_Liver_CA_pop.csv].[Deaths]' />
          <map key='[Deaths (Total_US_Liver_CA_pop.csv)]' value='[Total_US_Liver_CA_pop.csv].[Deaths]' />
          <map key='[Deaths (Total_US_Liver_CA_pop.csv1)]' value='[Total_US_Liver_CA_pop.csv1].[Deaths]' />
          <map key='[Deaths (Total_US_Lung_CA_pop.csv)]' value='[Total_US_Lung_CA_pop.csv].[Deaths]' />
          <map key='[Deaths (US_Liver_Join.csv)]' value='[US_Liver_Join.csv].[Deaths]' />
          <map key='[Deaths (US_Liver_smoking.csv)]' value='[US_Liver_smoking.csv].[Deaths]' />
          <map key='[Deaths (US_Lung_Join.csv)]' value='[US_Lung_Join.csv].[Deaths]' />
          <map key='[Deaths (US_Lung_alcohol.csv)]' value='[US_Lung_alcohol.csv].[Deaths]' />
          <map key='[Deaths]' value='[Total_Lung_CA_pop.csv].[Deaths]' />
          <map key='[Litres per Person (US_Liver_Join.csv)]' value='[US_Liver_Join.csv].[Litres per Person]' />
          <map key='[Litres per Person (US_Lung_alcohol.csv)]' value='[US_Lung_alcohol.csv].[Litres per Person]' />
          <map key='[Litres per Person]' value='[Alcohol_consumption.csv].[Litres per Person]' />
          <map key='[Measure (Alcohol_consumption.csv)]' value='[Alcohol_consumption.csv].[Measure]' />
          <map key='[Measure (Daily_Smokers.csv)]' value='[Daily_Smokers.csv].[Measure]' />
          <map key='[Measure (Total_Liver_CA_pop.csv)]' value='[Total_Liver_CA_pop.csv].[Measure]' />
          <map key='[Measure (Total_US_Liver_CA_pop.csv)]' value='[Total_US_Liver_CA_pop.csv].[Measure]' />
          <map key='[Measure (Total_US_Liver_CA_pop.csv1)]' value='[Total_US_Liver_CA_pop.csv1].[Measure]' />
          <map key='[Measure (Total_US_Lung_CA_pop.csv)]' value='[Total_US_Lung_CA_pop.csv].[Measure]' />
          <map key='[Measure]' value='[Total_Lung_CA_pop.csv].[Measure]' />
          <map key='[Measure_x (US_Liver_smoking.csv)]' value='[US_Liver_smoking.csv].[Measure_x]' />
          <map key='[Measure_x (US_Lung_Join.csv)]' value='[US_Lung_Join.csv].[Measure_x]' />
          <map key='[Measure_x (US_Lung_alcohol.csv)]' value='[US_Lung_alcohol.csv].[Measure_x]' />
          <map key='[Measure_x]' value='[US_Liver_Join.csv].[Measure_x]' />
          <map key='[Measure_y (US_Liver_smoking.csv)]' value='[US_Liver_smoking.csv].[Measure_y]' />
          <map key='[Measure_y (US_Lung_Join.csv)]' value='[US_Lung_Join.csv].[Measure_y]' />
          <map key='[Measure_y (US_Lung_alcohol.csv)]' value='[US_Lung_alcohol.csv].[Measure_y]' />
          <map key='[Measure_y]' value='[US_Liver_Join.csv].[Measure_y]' />
          <map key='[Percent of Smokers (US_Liver_smoking.csv)]' value='[US_Liver_smoking.csv].[Percent of Smokers]' />
          <map key='[Percent of Smokers (US_Lung_Join.csv)]' value='[US_Lung_Join.csv].[Percent of Smokers]' />
          <map key='[Percent of Smokers]' value='[Daily_Smokers.csv].[Percent of Smokers]' />
          <map key='[Population (Total_Liver_CA_pop.csv)]' value='[Total_Liver_CA_pop.csv].[Population]' />
          <map key='[Population (Total_US_Liver_CA_pop.csv)]' value='[Total_US_Liver_CA_pop.csv].[Population]' />
          <map key='[Population (Total_US_Liver_CA_pop.csv1)]' value='[Total_US_Liver_CA_pop.csv1].[Population]' />
          <map key='[Population (Total_US_Lung_CA_pop.csv)]' value='[Total_US_Lung_CA_pop.csv].[Population]' />
          <map key='[Population (US_Liver_Join.csv)]' value='[US_Liver_Join.csv].[Population]' />
          <map key='[Population (US_Liver_smoking.csv)]' value='[US_Liver_smoking.csv].[Population]' />
          <map key='[Population (US_Lung_Join.csv)]' value='[US_Lung_Join.csv].[Population]' />
          <map key='[Population (US_Lung_alcohol.csv)]' value='[US_Lung_alcohol.csv].[Population]' />
          <map key='[Population]' value='[Total_Lung_CA_pop.csv].[Population]' />
          <map key='[Total Deaths Percent (Total_Liver_CA_pop.csv)]' value='[Total_Liver_CA_pop.csv].[Total Deaths Percent]' />
          <map key='[Total Deaths Percent (Total_US_Liver_CA_pop.csv)]' value='[Total_US_Liver_CA_pop.csv].[Total Deaths Percent]' />
          <map key='[Total Deaths Percent (Total_US_Liver_CA_pop.csv1)]' value='[Total_US_Liver_CA_pop.csv1].[Total Deaths Percent]' />
          <map key='[Total Deaths Percent (Total_US_Lung_CA_pop.csv)]' value='[Total_US_Lung_CA_pop.csv].[Total Deaths Percent]' />
          <map key='[Total Deaths Percent (US_Liver_Join.csv)]' value='[US_Liver_Join.csv].[Total Deaths Percent]' />
          <map key='[Total Deaths Percent (US_Liver_smoking.csv)]' value='[US_Liver_smoking.csv].[Total Deaths Percent]' />
          <map key='[Total Deaths Percent (US_Lung_Join.csv)]' value='[US_Lung_Join.csv].[Total Deaths Percent]' />
          <map key='[Total Deaths Percent (US_Lung_alcohol.csv)]' value='[US_Lung_alcohol.csv].[Total Deaths Percent]' />
          <map key='[Total Deaths Percent]' value='[Total_Lung_CA_pop.csv].[Total Deaths Percent]' />
          <map key='[Variable (Alcohol_consumption.csv)]' value='[Alcohol_consumption.csv].[Variable]' />
          <map key='[Variable (Daily_Smokers.csv)]' value='[Daily_Smokers.csv].[Variable]' />
          <map key='[Variable (Total_Liver_CA_pop.csv)]' value='[Total_Liver_CA_pop.csv].[Variable]' />
          <map key='[Variable (Total_US_Liver_CA_pop.csv)]' value='[Total_US_Liver_CA_pop.csv].[Variable]' />
          <map key='[Variable (Total_US_Liver_CA_pop.csv1)]' value='[Total_US_Liver_CA_pop.csv1].[Variable]' />
          <map key='[Variable (Total_US_Lung_CA_pop.csv)]' value='[Total_US_Lung_CA_pop.csv].[Variable]' />
          <map key='[Variable]' value='[Total_Lung_CA_pop.csv].[Variable]' />
          <map key='[Variable_x (US_Liver_smoking.csv)]' value='[US_Liver_smoking.csv].[Variable_x]' />
          <map key='[Variable_x (US_Lung_Join.csv)]' value='[US_Lung_Join.csv].[Variable_x]' />
          <map key='[Variable_x (US_Lung_alcohol.csv)]' value='[US_Lung_alcohol.csv].[Variable_x]' />
          <map key='[Variable_x]' value='[US_Liver_Join.csv].[Variable_x]' />
          <map key='[Variable_y (US_Liver_smoking.csv)]' value='[US_Liver_smoking.csv].[Variable_y]' />
          <map key='[Variable_y (US_Lung_Join.csv)]' value='[US_Lung_Join.csv].[Variable_y]' />
          <map key='[Variable_y (US_Lung_alcohol.csv)]' value='[US_Lung_alcohol.csv].[Variable_y]' />
          <map key='[Variable_y]' value='[US_Liver_Join.csv].[Variable_y]' />
          <map key='[Year (Alcohol_consumption.csv)]' value='[Alcohol_consumption.csv].[Year]' />
          <map key='[Year (Daily_Smokers.csv)]' value='[Daily_Smokers.csv].[Year]' />
          <map key='[Year (Total_Liver_CA_pop.csv)]' value='[Total_Liver_CA_pop.csv].[Year]' />
          <map key='[Year (Total_US_Liver_CA_pop.csv)]' value='[Total_US_Liver_CA_pop.csv].[Year]' />
          <map key='[Year (Total_US_Liver_CA_pop.csv1)]' value='[Total_US_Liver_CA_pop.csv1].[Year]' />
          <map key='[Year (Total_US_Lung_CA_pop.csv)]' value='[Total_US_Lung_CA_pop.csv].[Year]' />
          <map key='[Year (US_Liver_Join.csv)]' value='[US_Liver_Join.csv].[Year]' />
          <map key='[Year (US_Liver_smoking.csv)]' value='[US_Liver_smoking.csv].[Year]' />
          <map key='[Year (US_Lung_Join.csv)]' value='[US_Lung_Join.csv].[Year]' />
          <map key='[Year (US_Lung_alcohol.csv)]' value='[US_Lung_alcohol.csv].[Year]' />
          <map key='[Year]' value='[Total_Lung_CA_pop.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Variable</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Variable]</local-name>
            <parent-name>[Total_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Variable</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Measure]</local-name>
            <parent-name>[Total_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Measure</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Total_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Total_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Total_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Total_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths Percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths Percent]</local-name>
            <parent-name>[Total_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Total Deaths Percent</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Total_Lung_CA_pop.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G376:no:A1:G376:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1500</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Variable (Daily_Smokers.csv)]</local-name>
            <parent-name>[Daily_Smokers.csv]</parent-name>
            <remote-alias>Variable</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Measure (Daily_Smokers.csv)]</local-name>
            <parent-name>[Daily_Smokers.csv]</parent-name>
            <remote-alias>Measure</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Daily_Smokers.csv)]</local-name>
            <parent-name>[Daily_Smokers.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Daily_Smokers.csv)]</local-name>
            <parent-name>[Daily_Smokers.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent of Smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent of Smokers]</local-name>
            <parent-name>[Daily_Smokers.csv]</parent-name>
            <remote-alias>Percent of Smokers</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Daily_Smokers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E244:no:A1:E244:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>486</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Variable (Total_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Variable</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Measure (Total_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Measure</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Total_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Total_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths (Total_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (Total_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths Percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths Percent (Total_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Total Deaths Percent</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Total_Liver_CA_pop.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G376:no:A1:G376:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1500</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Variable (Alcohol_consumption.csv)]</local-name>
            <parent-name>[Alcohol_consumption.csv]</parent-name>
            <remote-alias>Variable</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Measure (Alcohol_consumption.csv)]</local-name>
            <parent-name>[Alcohol_consumption.csv]</parent-name>
            <remote-alias>Measure</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Alcohol_consumption.csv)]</local-name>
            <parent-name>[Alcohol_consumption.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Alcohol_consumption.csv)]</local-name>
            <parent-name>[Alcohol_consumption.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Litres per Person</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Litres per Person]</local-name>
            <parent-name>[Alcohol_consumption.csv]</parent-name>
            <remote-alias>Litres per Person</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Alcohol_consumption.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E420:no:A1:E420:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>838</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Variable (Total_US_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Variable</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Measure (Total_US_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Measure</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Total_US_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Total_US_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths (Total_US_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (Total_US_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths Percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths Percent (Total_US_Liver_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv]</parent-name>
            <remote-alias>Total Deaths Percent</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Total_US_Liver_CA_pop.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G10:no:A1:G10:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>36</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Liver_Join.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable_x</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Variable_x]</local-name>
            <parent-name>[US_Liver_Join.csv]</parent-name>
            <remote-alias>Variable_x</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure_x</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Measure_x]</local-name>
            <parent-name>[US_Liver_Join.csv]</parent-name>
            <remote-alias>Measure_x</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (US_Liver_Join.csv)]</local-name>
            <parent-name>[US_Liver_Join.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (US_Liver_Join.csv)]</local-name>
            <parent-name>[US_Liver_Join.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths (US_Liver_Join.csv)]</local-name>
            <parent-name>[US_Liver_Join.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (US_Liver_Join.csv)]</local-name>
            <parent-name>[US_Liver_Join.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths Percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths Percent (US_Liver_Join.csv)]</local-name>
            <parent-name>[US_Liver_Join.csv]</parent-name>
            <remote-alias>Total Deaths Percent</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable_y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Variable_y]</local-name>
            <parent-name>[US_Liver_Join.csv]</parent-name>
            <remote-alias>Variable_y</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure_y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Measure_y]</local-name>
            <parent-name>[US_Liver_Join.csv]</parent-name>
            <remote-alias>Measure_y</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Litres per Person</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Litres per Person (US_Liver_Join.csv)]</local-name>
            <parent-name>[US_Liver_Join.csv]</parent-name>
            <remote-alias>Litres per Person</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Liver_smoking.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable_x</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Variable_x (US_Liver_smoking.csv)]</local-name>
            <parent-name>[US_Liver_smoking.csv]</parent-name>
            <remote-alias>Variable_x</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure_x</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Measure_x (US_Liver_smoking.csv)]</local-name>
            <parent-name>[US_Liver_smoking.csv]</parent-name>
            <remote-alias>Measure_x</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (US_Liver_smoking.csv)]</local-name>
            <parent-name>[US_Liver_smoking.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (US_Liver_smoking.csv)]</local-name>
            <parent-name>[US_Liver_smoking.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths (US_Liver_smoking.csv)]</local-name>
            <parent-name>[US_Liver_smoking.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (US_Liver_smoking.csv)]</local-name>
            <parent-name>[US_Liver_smoking.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths Percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths Percent (US_Liver_smoking.csv)]</local-name>
            <parent-name>[US_Liver_smoking.csv]</parent-name>
            <remote-alias>Total Deaths Percent</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable_y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Variable_y (US_Liver_smoking.csv)]</local-name>
            <parent-name>[US_Liver_smoking.csv]</parent-name>
            <remote-alias>Variable_y</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure_y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Measure_y (US_Liver_smoking.csv)]</local-name>
            <parent-name>[US_Liver_smoking.csv]</parent-name>
            <remote-alias>Measure_y</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent of Smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent of Smokers (US_Liver_smoking.csv)]</local-name>
            <parent-name>[US_Liver_smoking.csv]</parent-name>
            <remote-alias>Percent of Smokers</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Variable (Total_US_Liver_CA_pop.csv1)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv1]</parent-name>
            <remote-alias>Variable</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Measure (Total_US_Liver_CA_pop.csv1)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv1]</parent-name>
            <remote-alias>Measure</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Total_US_Liver_CA_pop.csv1)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Total_US_Liver_CA_pop.csv1)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths (Total_US_Liver_CA_pop.csv1)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv1]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (Total_US_Liver_CA_pop.csv1)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths Percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths Percent (Total_US_Liver_CA_pop.csv1)]</local-name>
            <parent-name>[Total_US_Liver_CA_pop.csv1]</parent-name>
            <remote-alias>Total Deaths Percent</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Total_US_Liver_CA_pop.csv1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G10:no:A1:G10:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>36</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Variable (Total_US_Lung_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Variable</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Measure (Total_US_Lung_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Measure</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Total_US_Lung_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Total_US_Lung_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths (Total_US_Lung_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (Total_US_Lung_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>63</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths Percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths Percent (Total_US_Lung_CA_pop.csv)]</local-name>
            <parent-name>[Total_US_Lung_CA_pop.csv]</parent-name>
            <remote-alias>Total Deaths Percent</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Total_US_Lung_CA_pop.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G10:no:A1:G10:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>36</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Lung_Join.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable_x</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Variable_x (US_Lung_Join.csv)]</local-name>
            <parent-name>[US_Lung_Join.csv]</parent-name>
            <remote-alias>Variable_x</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure_x</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Measure_x (US_Lung_Join.csv)]</local-name>
            <parent-name>[US_Lung_Join.csv]</parent-name>
            <remote-alias>Measure_x</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (US_Lung_Join.csv)]</local-name>
            <parent-name>[US_Lung_Join.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (US_Lung_Join.csv)]</local-name>
            <parent-name>[US_Lung_Join.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths (US_Lung_Join.csv)]</local-name>
            <parent-name>[US_Lung_Join.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (US_Lung_Join.csv)]</local-name>
            <parent-name>[US_Lung_Join.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths Percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths Percent (US_Lung_Join.csv)]</local-name>
            <parent-name>[US_Lung_Join.csv]</parent-name>
            <remote-alias>Total Deaths Percent</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable_y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Variable_y (US_Lung_Join.csv)]</local-name>
            <parent-name>[US_Lung_Join.csv]</parent-name>
            <remote-alias>Variable_y</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure_y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Measure_y (US_Lung_Join.csv)]</local-name>
            <parent-name>[US_Lung_Join.csv]</parent-name>
            <remote-alias>Measure_y</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent of Smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent of Smokers (US_Lung_Join.csv)]</local-name>
            <parent-name>[US_Lung_Join.csv]</parent-name>
            <remote-alias>Percent of Smokers</remote-alias>
            <ordinal>74</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US_Lung_alcohol.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable_x</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Variable_x (US_Lung_alcohol.csv)]</local-name>
            <parent-name>[US_Lung_alcohol.csv]</parent-name>
            <remote-alias>Variable_x</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure_x</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Measure_x (US_Lung_alcohol.csv)]</local-name>
            <parent-name>[US_Lung_alcohol.csv]</parent-name>
            <remote-alias>Measure_x</remote-alias>
            <ordinal>76</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (US_Lung_alcohol.csv)]</local-name>
            <parent-name>[US_Lung_alcohol.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>77</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (US_Lung_alcohol.csv)]</local-name>
            <parent-name>[US_Lung_alcohol.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>78</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths (US_Lung_alcohol.csv)]</local-name>
            <parent-name>[US_Lung_alcohol.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>79</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (US_Lung_alcohol.csv)]</local-name>
            <parent-name>[US_Lung_alcohol.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths Percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths Percent (US_Lung_alcohol.csv)]</local-name>
            <parent-name>[US_Lung_alcohol.csv]</parent-name>
            <remote-alias>Total Deaths Percent</remote-alias>
            <ordinal>81</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variable_y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Variable_y (US_Lung_alcohol.csv)]</local-name>
            <parent-name>[US_Lung_alcohol.csv]</parent-name>
            <remote-alias>Variable_y</remote-alias>
            <ordinal>82</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure_y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Measure_y (US_Lung_alcohol.csv)]</local-name>
            <parent-name>[US_Lung_alcohol.csv]</parent-name>
            <remote-alias>Measure_y</remote-alias>
            <ordinal>83</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Litres per Person</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Litres per Person (US_Lung_alcohol.csv)]</local-name>
            <parent-name>[US_Lung_alcohol.csv]</parent-name>
            <remote-alias>Litres per Person</remote-alias>
            <ordinal>84</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank' datatype='integer' name='[Calculation_148337320951619585]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Deaths]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Country (Alcohol consumption.csv)' datatype='string' name='[Country (Alcohol_consumption.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Daily Smokers.csv)' datatype='string' name='[Country (Daily_Smokers.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Total Liver CA pop.csv)' datatype='string' name='[Country (Total_Liver_CA_pop.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Total US Liver CA pop.csv)' datatype='string' name='[Country (Total_US_Liver_CA_pop.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Total US Liver CA pop.csv1)' datatype='string' name='[Country (Total_US_Liver_CA_pop.csv1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Total US Lung CA pop.csv)' datatype='string' name='[Country (Total_US_Lung_CA_pop.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (US Liver Join.csv)' datatype='string' name='[Country (US_Liver_Join.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (US Liver smoking.csv)' datatype='string' name='[Country (US_Liver_smoking.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (US Lung Join.csv)' datatype='string' name='[Country (US_Lung_Join.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (US Lung alcohol.csv)' datatype='string' name='[Country (US_Lung_alcohol.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='None' datatype='integer' name='[Deaths (Total US Lung CA pop.csv) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[Deaths (Total_US_Lung_CA_pop.csv)]' peg='0' size='3541' />
      </column>
      <column caption='Deaths (Total Liver CA pop.csv)' datatype='integer' name='[Deaths (Total_Liver_CA_pop.csv)]' role='measure' type='quantitative' />
      <column caption='Deaths (Total US Liver CA pop.csv)' datatype='integer' name='[Deaths (Total_US_Liver_CA_pop.csv)]' role='measure' type='quantitative' />
      <column caption='Deaths (Total US Liver CA pop.csv1)' datatype='integer' name='[Deaths (Total_US_Liver_CA_pop.csv1)]' role='measure' type='quantitative' />
      <column caption='Deaths (Total US Lung CA pop.csv)' datatype='integer' name='[Deaths (Total_US_Lung_CA_pop.csv)]' role='measure' type='quantitative' />
      <column caption='Deaths (US Liver Join.csv)' datatype='real' name='[Deaths (US_Liver_Join.csv)]' role='measure' type='quantitative' />
      <column caption='Deaths (US Liver smoking.csv)' datatype='real' name='[Deaths (US_Liver_smoking.csv)]' role='measure' type='quantitative' />
      <column caption='Deaths (US Lung Join.csv)' datatype='real' name='[Deaths (US_Lung_Join.csv)]' role='measure' type='quantitative' />
      <column caption='Deaths (US Lung alcohol.csv)' datatype='real' name='[Deaths (US_Lung_alcohol.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Litres per Person (US Liver Join.csv)' datatype='real' name='[Litres per Person (US_Liver_Join.csv)]' role='measure' type='quantitative' />
      <column caption='Litres per Person (US Lung alcohol.csv)' datatype='real' name='[Litres per Person (US_Lung_alcohol.csv)]' role='measure' type='quantitative' />
      <column caption='Measure (Alcohol consumption.csv)' datatype='string' name='[Measure (Alcohol_consumption.csv)]' role='dimension' type='nominal' />
      <column caption='Measure (Daily Smokers.csv)' datatype='string' name='[Measure (Daily_Smokers.csv)]' role='dimension' type='nominal' />
      <column caption='Measure (Total Liver CA pop.csv)' datatype='string' name='[Measure (Total_Liver_CA_pop.csv)]' role='dimension' type='nominal' />
      <column caption='Measure (Total US Liver CA pop.csv)' datatype='string' name='[Measure (Total_US_Liver_CA_pop.csv)]' role='dimension' type='nominal' />
      <column caption='Measure (Total US Liver CA pop.csv1)' datatype='string' name='[Measure (Total_US_Liver_CA_pop.csv1)]' role='dimension' type='nominal' />
      <column caption='Measure (Total US Lung CA pop.csv)' datatype='string' name='[Measure (Total_US_Lung_CA_pop.csv)]' role='dimension' type='nominal' />
      <column caption='Measure x (US Liver smoking.csv)' datatype='string' name='[Measure_x (US_Liver_smoking.csv)]' role='dimension' type='nominal' />
      <column caption='Measure x (US Lung Join.csv)' datatype='string' name='[Measure_x (US_Lung_Join.csv)]' role='dimension' type='nominal' />
      <column caption='Measure x (US Lung alcohol.csv)' datatype='string' name='[Measure_x (US_Lung_alcohol.csv)]' role='dimension' type='nominal' />
      <column caption='Measure x' datatype='string' name='[Measure_x]' role='dimension' type='nominal' />
      <column caption='Measure y (US Liver smoking.csv)' datatype='string' name='[Measure_y (US_Liver_smoking.csv)]' role='dimension' type='nominal' />
      <column caption='Measure y (US Lung Join.csv)' datatype='string' name='[Measure_y (US_Lung_Join.csv)]' role='dimension' type='nominal' />
      <column caption='Measure y (US Lung alcohol.csv)' datatype='string' name='[Measure_y (US_Lung_alcohol.csv)]' role='dimension' type='nominal' />
      <column caption='Measure y' datatype='string' name='[Measure_y]' role='dimension' type='nominal' />
      <column caption='Percent of Smokers (US Liver smoking.csv)' datatype='real' name='[Percent of Smokers (US_Liver_smoking.csv)]' role='measure' type='quantitative' />
      <column caption='Percent of Smokers (US Lung Join.csv)' datatype='real' name='[Percent of Smokers (US_Lung_Join.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Percent of Smokers]' role='measure' type='quantitative' />
      <column caption='Population (Total Liver CA pop.csv)' datatype='integer' name='[Population (Total_Liver_CA_pop.csv)]' role='measure' type='quantitative' />
      <column caption='Population (Total US Liver CA pop.csv)' datatype='integer' name='[Population (Total_US_Liver_CA_pop.csv)]' role='measure' type='quantitative' />
      <column caption='Population (Total US Liver CA pop.csv1)' datatype='integer' name='[Population (Total_US_Liver_CA_pop.csv1)]' role='measure' type='quantitative' />
      <column caption='Population (Total US Lung CA pop.csv)' datatype='integer' name='[Population (Total_US_Lung_CA_pop.csv)]' role='measure' type='quantitative' />
      <column caption='Population (US Liver Join.csv)' datatype='integer' name='[Population (US_Liver_Join.csv)]' role='measure' type='quantitative' />
      <column caption='Population (US Liver smoking.csv)' datatype='integer' name='[Population (US_Liver_smoking.csv)]' role='measure' type='quantitative' />
      <column caption='Population (US Lung Join.csv)' datatype='integer' name='[Population (US_Lung_Join.csv)]' role='measure' type='quantitative' />
      <column caption='Population (US Lung alcohol.csv)' datatype='integer' name='[Population (US_Lung_alcohol.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column caption='Total Deaths Percent (Total Liver CA pop.csv)' datatype='real' name='[Total Deaths Percent (Total_Liver_CA_pop.csv)]' role='measure' type='quantitative' />
      <column caption='Total Deaths Percent (Total US Liver CA pop.csv)' datatype='real' name='[Total Deaths Percent (Total_US_Liver_CA_pop.csv)]' role='measure' type='quantitative' />
      <column caption='Total Deaths Percent (Total US Liver CA pop.csv1)' datatype='real' name='[Total Deaths Percent (Total_US_Liver_CA_pop.csv1)]' role='measure' type='quantitative' />
      <column caption='Total Deaths Percent (Total US Lung CA pop.csv)' datatype='real' name='[Total Deaths Percent (Total_US_Lung_CA_pop.csv)]' role='measure' type='quantitative' />
      <column caption='Total Deaths Percent (US Liver Join.csv)' datatype='real' name='[Total Deaths Percent (US_Liver_Join.csv)]' role='measure' type='quantitative' />
      <column caption='Total Deaths Percent (US Liver smoking.csv)' datatype='real' name='[Total Deaths Percent (US_Liver_smoking.csv)]' role='measure' type='quantitative' />
      <column caption='Total Deaths Percent (US Lung Join.csv)' datatype='real' name='[Total Deaths Percent (US_Lung_Join.csv)]' role='measure' type='quantitative' />
      <column caption='Total Deaths Percent (US Lung alcohol.csv)' datatype='real' name='[Total Deaths Percent (US_Lung_alcohol.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Deaths Percent]' role='measure' type='quantitative' />
      <column caption='Variable (Alcohol consumption.csv)' datatype='string' name='[Variable (Alcohol_consumption.csv)]' role='dimension' type='nominal' />
      <column caption='Variable (Daily Smokers.csv)' datatype='string' name='[Variable (Daily_Smokers.csv)]' role='dimension' type='nominal' />
      <column caption='Variable (Total Liver CA pop.csv)' datatype='string' name='[Variable (Total_Liver_CA_pop.csv)]' role='dimension' type='nominal' />
      <column caption='Variable (Total US Liver CA pop.csv)' datatype='string' name='[Variable (Total_US_Liver_CA_pop.csv)]' role='dimension' type='nominal' />
      <column caption='Variable (Total US Liver CA pop.csv1)' datatype='string' name='[Variable (Total_US_Liver_CA_pop.csv1)]' role='dimension' type='nominal' />
      <column caption='Variable (Total US Lung CA pop.csv)' datatype='string' name='[Variable (Total_US_Lung_CA_pop.csv)]' role='dimension' type='nominal' />
      <column caption='Variable x (US Liver smoking.csv)' datatype='string' name='[Variable_x (US_Liver_smoking.csv)]' role='dimension' type='nominal' />
      <column caption='Variable x (US Lung Join.csv)' datatype='string' name='[Variable_x (US_Lung_Join.csv)]' role='dimension' type='nominal' />
      <column caption='Variable x (US Lung alcohol.csv)' datatype='string' name='[Variable_x (US_Lung_alcohol.csv)]' role='dimension' type='nominal' />
      <column caption='Variable x' datatype='string' name='[Variable_x]' role='dimension' type='nominal' />
      <column caption='Variable y (US Liver smoking.csv)' datatype='string' name='[Variable_y (US_Liver_smoking.csv)]' role='dimension' type='nominal' />
      <column caption='Variable y (US Lung Join.csv)' datatype='string' name='[Variable_y (US_Lung_Join.csv)]' role='dimension' type='nominal' />
      <column caption='Variable y (US Lung alcohol.csv)' datatype='string' name='[Variable_y (US_Lung_alcohol.csv)]' role='dimension' type='nominal' />
      <column caption='Variable y' datatype='string' name='[Variable_y]' role='dimension' type='nominal' />
      <column caption='Year (Alcohol consumption.csv)' datatype='integer' name='[Year (Alcohol_consumption.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (Daily Smokers.csv)' datatype='integer' name='[Year (Daily_Smokers.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (Total Liver CA pop.csv)' datatype='integer' name='[Year (Total_Liver_CA_pop.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (Total US Liver CA pop.csv)' datatype='integer' name='[Year (Total_US_Liver_CA_pop.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (Total US Liver CA pop.csv1)' datatype='integer' name='[Year (Total_US_Liver_CA_pop.csv1)]' role='dimension' type='quantitative' />
      <column caption='Year (Total US Lung CA pop.csv)' datatype='integer' name='[Year (Total_US_Lung_CA_pop.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (US Liver Join.csv)' datatype='integer' name='[Year (US_Liver_Join.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (US Liver smoking.csv)' datatype='integer' name='[Year (US_Liver_smoking.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (US Lung Join.csv)' datatype='integer' name='[Year (US_Lung_Join.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (US Lung alcohol.csv)' datatype='integer' name='[Year (US_Lung_alcohol.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Alcohol_consumption.csv' datatype='table' name='[__tableau_internal_object_id__].[Alcohol_consumption.csv_1C89431AA69344D4812ECA368CADAD2D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Daily_Smokers.csv' datatype='table' name='[__tableau_internal_object_id__].[Daily_Smokers.csv_6E2521AC46C94352AB7D42A47A013CFF]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Total_Liver_CA_pop.csv' datatype='table' name='[__tableau_internal_object_id__].[Total_Liver_CA_pop.csv_D8B5969D48D24A9FB71C12670D618629]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Total_Lung_CA_pop.csv' datatype='table' name='[__tableau_internal_object_id__].[Total_Lung_CA_pop.csv_DB3AFC25C3214C7797E75272F0F45B90]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Total_US_Liver_CA_pop.csv' datatype='table' name='[__tableau_internal_object_id__].[Total_US_Liver_CA_pop.csv_809F9A1C82FA4980928C3DC3FD11760B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Total_US_Liver_CA_pop.csv1' datatype='table' name='[__tableau_internal_object_id__].[Total_US_Liver_CA_pop.csv_F835CF811A81413A9EC7F5DF3B5B7470]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Total_US_Lung_CA_pop.csv' datatype='table' name='[__tableau_internal_object_id__].[Total_US_Lung_CA_pop.csv_0331D980B16D45AC9543876345319F03]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Liver_Join.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Liver_Join.csv_BF70A2955BEC4ABBA8B9D4CA39C5FFAD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Liver_smoking.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Liver_smoking.csv_7A050B6235E349E0B68F9DE9707D2AB5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Lung_Join.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Lung_Join.csv_19A25D720A9D43F38BBB1523D63F65A4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US_Lung_alcohol.csv' datatype='table' name='[__tableau_internal_object_id__].[US_Lung_alcohol.csv_0B7E9A0E9E3C433698AA3E77BB3A3AFA]' role='measure' type='quantitative' />
      <column-instance column='[Deaths (Total_US_Lung_CA_pop.csv)]' derivation='Attribute' name='[attr:Deaths (Total_US_Lung_CA_pop.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent of Smokers (US_Lung_Join.csv)]' derivation='Avg' name='[avg:Percent of Smokers (US_Lung_Join.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent of Smokers]' derivation='Avg' name='[avg:Percent of Smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population (Total_US_Lung_CA_pop.csv)]' derivation='Avg' name='[avg:Population (Total_US_Lung_CA_pop.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Deaths Percent (US_Lung_Join.csv)]' derivation='Avg' name='[avg:Total Deaths Percent (US_Lung_Join.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Deaths Percent]' derivation='Avg' name='[avg:Total Deaths Percent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population (Total_US_Lung_CA_pop.csv)]' derivation='Count' name='[cnt:Population (Total_US_Lung_CA_pop.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent of Smokers]' derivation='Median' name='[med:Percent of Smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths (Total_US_Lung_CA_pop.csv)]' derivation='Min' name='[min:Deaths (Total_US_Lung_CA_pop.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Deaths (Total_US_Lung_CA_pop.csv)]' derivation='None' name='[none:Deaths (Total_US_Lung_CA_pop.csv):qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='50' column='[Percent of Smokers]' derivation='Percentile' name='[prc50:Percent of Smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[rank:sum:Deaths:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Deaths (Total_US_Lung_CA_pop.csv)]' derivation='Sum' name='[sum:Deaths (Total_US_Lung_CA_pop.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths (US_Lung_Join.csv)]' derivation='Sum' name='[sum:Deaths (US_Lung_Join.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent of Smokers]' derivation='Sum' name='[sum:Percent of Smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Deaths Percent]' derivation='Sum' name='[sum:Total Deaths Percent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population (Total_US_Lung_CA_pop.csv)]' derivation='Var' name='[var:Population (Total_US_Lung_CA_pop.csv):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Percent of Smokers (US_Lung_Join.csv):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population (Total_US_Lung_CA_pop.csv):qk]:1&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Total Deaths Percent:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (US_Lung_Join.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[attr:Deaths (Total_US_Lung_CA_pop.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Percent of Smokers (US_Lung_Join.csv):qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Percent of Smokers:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[med:Percent of Smokers:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[min:Deaths (Total_US_Lung_CA_pop.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Deaths (Total_US_Lung_CA_pop.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[prc50:Percent of Smokers:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_US_Lung_CA_pop.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Percent of Smokers:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent (US_Lung_Join.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population (Total_US_Lung_CA_pop.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[cnt:Population (Total_US_Lung_CA_pop.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[rank:sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_US_Lung_CA_pop.csv):qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[var:Population (Total_US_Lung_CA_pop.csv):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Türkiye&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Variable_x (US_Lung_Join.csv)' />
        <field-sort-custom-order field='Measure_x (US_Lung_Join.csv)' />
        <field-sort-custom-order field='Country (US_Lung_Join.csv)' />
        <field-sort-custom-order field='Year (US_Lung_Join.csv)' />
        <field-sort-custom-order field='Deaths (US_Lung_Join.csv)' />
        <field-sort-custom-order field='Population (US_Lung_Join.csv)' />
        <field-sort-custom-order field='Total Deaths Percent (US_Lung_Join.csv)' />
        <field-sort-custom-order field='Variable_y (US_Lung_Join.csv)' />
        <field-sort-custom-order field='Measure_y (US_Lung_Join.csv)' />
        <field-sort-custom-order field='Percent of Smokers (US_Lung_Join.csv)' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Alcohol_consumption.csv' id='Alcohol_consumption.csv_1C89431AA69344D4812ECA368CADAD2D'>
            <properties context=''>
              <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Alcohol_consumption.csv' table='[Alcohol_consumption#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:E420:no:A1:E420:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Variable' ordinal='0' />
                  <column datatype='string' name='Measure' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Litres per Person' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Daily_Smokers.csv' id='Daily_Smokers.csv_6E2521AC46C94352AB7D42A47A013CFF'>
            <properties context=''>
              <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Daily_Smokers.csv' table='[Daily_Smokers#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:E244:no:A1:E244:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Variable' ordinal='0' />
                  <column datatype='string' name='Measure' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Percent of Smokers' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Total_Liver_CA_pop.csv' id='Total_Liver_CA_pop.csv_D8B5969D48D24A9FB71C12670D618629'>
            <properties context=''>
              <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Total_Liver_CA_pop.csv' table='[Total_Liver_CA_pop#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:G376:no:A1:G376:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Variable' ordinal='0' />
                  <column datatype='string' name='Measure' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='integer' name='Deaths' ordinal='4' />
                  <column datatype='integer' name='Population' ordinal='5' />
                  <column datatype='real' name='Total Deaths Percent' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Total_Lung_CA_pop.csv' id='Total_Lung_CA_pop.csv_DB3AFC25C3214C7797E75272F0F45B90'>
            <properties context=''>
              <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Total_Lung_CA_pop.csv' table='[Total_Lung_CA_pop#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:G376:no:A1:G376:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Variable' ordinal='0' />
                  <column datatype='string' name='Measure' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='integer' name='Deaths' ordinal='4' />
                  <column datatype='integer' name='Population' ordinal='5' />
                  <column datatype='real' name='Total Deaths Percent' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Total_US_Liver_CA_pop.csv' id='Total_US_Liver_CA_pop.csv_809F9A1C82FA4980928C3DC3FD11760B'>
            <properties context=''>
              <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Total_US_Liver_CA_pop.csv' table='[Total_US_Liver_CA_pop#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:G10:no:A1:G10:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Variable' ordinal='0' />
                  <column datatype='string' name='Measure' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='integer' name='Deaths' ordinal='4' />
                  <column datatype='integer' name='Population' ordinal='5' />
                  <column datatype='real' name='Total Deaths Percent' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Total_US_Liver_CA_pop.csv1' id='Total_US_Liver_CA_pop.csv_F835CF811A81413A9EC7F5DF3B5B7470'>
            <properties context=''>
              <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Total_US_Liver_CA_pop.csv1' table='[Total_US_Liver_CA_pop#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:G10:no:A1:G10:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Variable' ordinal='0' />
                  <column datatype='string' name='Measure' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='integer' name='Deaths' ordinal='4' />
                  <column datatype='integer' name='Population' ordinal='5' />
                  <column datatype='real' name='Total Deaths Percent' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Total_US_Lung_CA_pop.csv' id='Total_US_Lung_CA_pop.csv_0331D980B16D45AC9543876345319F03'>
            <properties context=''>
              <relation connection='textscan.1gtp2u50pubu8y12e6szc18qtwk0' name='Total_US_Lung_CA_pop.csv' table='[Total_US_Lung_CA_pop#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:G10:no:A1:G10:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Variable' ordinal='0' />
                  <column datatype='string' name='Measure' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='integer' name='Deaths' ordinal='4' />
                  <column datatype='integer' name='Population' ordinal='5' />
                  <column datatype='real' name='Total Deaths Percent' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US_Liver_Join.csv' id='US_Liver_Join.csv_BF70A2955BEC4ABBA8B9D4CA39C5FFAD'>
            <properties context=''>
              <relation connection='textscan.0tsr0hl0gaf4eo18g2lop1pfb0p2' name='US_Liver_Join.csv' table='[US_Liver_Join#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Variable_x' ordinal='0' />
                  <column datatype='string' name='Measure_x' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Deaths' ordinal='4' />
                  <column datatype='integer' name='Population' ordinal='5' />
                  <column datatype='real' name='Total Deaths Percent' ordinal='6' />
                  <column datatype='string' name='Variable_y' ordinal='7' />
                  <column datatype='string' name='Measure_y' ordinal='8' />
                  <column datatype='real' name='Litres per Person' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US_Liver_smoking.csv' id='US_Liver_smoking.csv_7A050B6235E349E0B68F9DE9707D2AB5'>
            <properties context=''>
              <relation connection='textscan.0tsr0hl0gaf4eo18g2lop1pfb0p2' name='US_Liver_smoking.csv' table='[US_Liver_smoking#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Variable_x' ordinal='0' />
                  <column datatype='string' name='Measure_x' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Deaths' ordinal='4' />
                  <column datatype='integer' name='Population' ordinal='5' />
                  <column datatype='real' name='Total Deaths Percent' ordinal='6' />
                  <column datatype='string' name='Variable_y' ordinal='7' />
                  <column datatype='string' name='Measure_y' ordinal='8' />
                  <column datatype='real' name='Percent of Smokers' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US_Lung_Join.csv' id='US_Lung_Join.csv_19A25D720A9D43F38BBB1523D63F65A4'>
            <properties context=''>
              <relation connection='textscan.0tsr0hl0gaf4eo18g2lop1pfb0p2' name='US_Lung_Join.csv' table='[US_Lung_Join#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Variable_x' ordinal='0' />
                  <column datatype='string' name='Measure_x' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Deaths' ordinal='4' />
                  <column datatype='integer' name='Population' ordinal='5' />
                  <column datatype='real' name='Total Deaths Percent' ordinal='6' />
                  <column datatype='string' name='Variable_y' ordinal='7' />
                  <column datatype='string' name='Measure_y' ordinal='8' />
                  <column datatype='real' name='Percent of Smokers' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US_Lung_alcohol.csv' id='US_Lung_alcohol.csv_0B7E9A0E9E3C433698AA3E77BB3A3AFA'>
            <properties context=''>
              <relation connection='textscan.0tsr0hl0gaf4eo18g2lop1pfb0p2' name='US_Lung_alcohol.csv' table='[US_Lung_alcohol#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Variable_x' ordinal='0' />
                  <column datatype='string' name='Measure_x' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Deaths' ordinal='4' />
                  <column datatype='integer' name='Population' ordinal='5' />
                  <column datatype='real' name='Total Deaths Percent' ordinal='6' />
                  <column datatype='string' name='Variable_y' ordinal='7' />
                  <column datatype='string' name='Measure_y' ordinal='8' />
                  <column datatype='real' name='Litres per Person' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country (Total_Liver_CA_pop.csv)]' />
              <expression op='[Country (Alcohol_consumption.csv)]' />
            </expression>
            <first-end-point object-id='Total_Liver_CA_pop.csv_D8B5969D48D24A9FB71C12670D618629' />
            <second-end-point object-id='Alcohol_consumption.csv_1C89431AA69344D4812ECA368CADAD2D' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (Daily_Smokers.csv)]' />
            </expression>
            <first-end-point object-id='Total_Lung_CA_pop.csv_DB3AFC25C3214C7797E75272F0F45B90' />
            <second-end-point object-id='Daily_Smokers.csv_6E2521AC46C94352AB7D42A47A013CFF' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (Total_Liver_CA_pop.csv)]' />
            </expression>
            <first-end-point object-id='Total_Lung_CA_pop.csv_DB3AFC25C3214C7797E75272F0F45B90' />
            <second-end-point object-id='Total_Liver_CA_pop.csv_D8B5969D48D24A9FB71C12670D618629' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country (Total_Liver_CA_pop.csv)]' />
              <expression op='[Country (Total_US_Liver_CA_pop.csv)]' />
            </expression>
            <first-end-point object-id='Total_Liver_CA_pop.csv_D8B5969D48D24A9FB71C12670D618629' />
            <second-end-point object-id='Total_US_Liver_CA_pop.csv_809F9A1C82FA4980928C3DC3FD11760B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (Total_US_Liver_CA_pop.csv1)]' />
            </expression>
            <first-end-point object-id='Total_Lung_CA_pop.csv_DB3AFC25C3214C7797E75272F0F45B90' />
            <second-end-point object-id='Total_US_Liver_CA_pop.csv_F835CF811A81413A9EC7F5DF3B5B7470' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (Total_US_Lung_CA_pop.csv)]' />
            </expression>
            <first-end-point object-id='Total_Lung_CA_pop.csv_DB3AFC25C3214C7797E75272F0F45B90' />
            <second-end-point object-id='Total_US_Lung_CA_pop.csv_0331D980B16D45AC9543876345319F03' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country (Total_US_Liver_CA_pop.csv)]' />
              <expression op='[Country (US_Liver_Join.csv)]' />
            </expression>
            <first-end-point object-id='Total_US_Liver_CA_pop.csv_809F9A1C82FA4980928C3DC3FD11760B' />
            <second-end-point object-id='US_Liver_Join.csv_BF70A2955BEC4ABBA8B9D4CA39C5FFAD' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country (Total_US_Liver_CA_pop.csv)]' />
              <expression op='[Country (US_Liver_smoking.csv)]' />
            </expression>
            <first-end-point object-id='Total_US_Liver_CA_pop.csv_809F9A1C82FA4980928C3DC3FD11760B' />
            <second-end-point object-id='US_Liver_smoking.csv_7A050B6235E349E0B68F9DE9707D2AB5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country (Total_US_Lung_CA_pop.csv)]' />
              <expression op='[Country (US_Lung_Join.csv)]' />
            </expression>
            <first-end-point object-id='Total_US_Lung_CA_pop.csv_0331D980B16D45AC9543876345319F03' />
            <second-end-point object-id='US_Lung_Join.csv_19A25D720A9D43F38BBB1523D63F65A4' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country (Total_US_Lung_CA_pop.csv)]' />
              <expression op='[Country (US_Lung_alcohol.csv)]' />
            </expression>
            <first-end-point object-id='Total_US_Lung_CA_pop.csv_0331D980B16D45AC9543876345319F03' />
            <second-end-point object-id='US_Lung_alcohol.csv_0B7E9A0E9E3C433698AA3E77BB3A3AFA' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Country lines'>
      <table>
        <view>
          <datasources>
            <datasource caption='Total_Lung_CA_pop+' name='federated.0hbgkls0rddsdt19ob8h80ohlc9t' />
          </datasources>
          <datasource-dependencies datasource='federated.0hbgkls0rddsdt19ob8h80ohlc9t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]' />
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]' />
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]' />
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]' />
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year:qk] + ([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year:qk] + [federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk]))</rows>
        <cols>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{24BEADC5-88F1-4DDD-8A1F-D503906755D6}' />
    </worksheet>
    <worksheet name='US Liver CA'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='36'>US Liver Cancer Deaths 2012 - 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Total_Lung_CA_pop+' name='federated.0hbgkls0rddsdt19ob8h80ohlc9t' />
          </datasources>
          <datasource-dependencies datasource='federated.0hbgkls0rddsdt19ob8h80ohlc9t'>
            <column caption='Country (Total US Liver CA pop.csv1)' datatype='string' name='[Country (Total_US_Liver_CA_pop.csv1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths (Total US Liver CA pop.csv1)' datatype='integer' name='[Deaths (Total_US_Liver_CA_pop.csv1)]' role='measure' type='quantitative' />
            <column caption='Litres per Person (US Liver Join.csv)' datatype='real' name='[Litres per Person (US_Liver_Join.csv)]' role='measure' type='quantitative' />
            <column caption='Population (Total US Liver CA pop.csv1)' datatype='integer' name='[Population (Total_US_Liver_CA_pop.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Litres per Person (US_Liver_Join.csv)]' derivation='Avg' name='[avg:Litres per Person (US_Liver_Join.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population (Total_US_Liver_CA_pop.csv1)]' derivation='Avg' name='[avg:Population (Total_US_Liver_CA_pop.csv1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country (Total_US_Liver_CA_pop.csv1)]' derivation='None' name='[none:Country (Total_US_Liver_CA_pop.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths (Total_US_Liver_CA_pop.csv1)]' derivation='Sum' name='[sum:Deaths (Total_US_Liver_CA_pop.csv1):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_US_Liver_CA_pop.csv1):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population (Total_US_Liver_CA_pop.csv1):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Litres per Person (US_Liver_Join.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#9d7660' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_US_Liver_CA_pop.csv1):nk]</rows>
        <cols>([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_US_Liver_CA_pop.csv1):qk] + ([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population (Total_US_Liver_CA_pop.csv1):qk] + [federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Litres per Person (US_Liver_Join.csv):qk]))</cols>
      </table>
      <simple-id uuid='{1CAC4A0F-B96C-4FDB-821D-C8F0C36F1E8F}' />
    </worksheet>
    <worksheet name='US Lung CA line graph'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='26'>United States Lung Cancer  Trend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Total_Lung_CA_pop+' name='federated.0hbgkls0rddsdt19ob8h80ohlc9t' />
          </datasources>
          <datasource-dependencies datasource='federated.0hbgkls0rddsdt19ob8h80ohlc9t'>
            <column caption='Country (Total US Lung CA pop.csv)' datatype='string' name='[Country (Total_US_Lung_CA_pop.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='None' datatype='integer' name='[Deaths (Total US Lung CA pop.csv) (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='3' formula='[Deaths (Total_US_Lung_CA_pop.csv)]' peg='0' size='3541' />
            </column>
            <column caption='Deaths (Total US Lung CA pop.csv)' datatype='integer' name='[Deaths (Total_US_Lung_CA_pop.csv)]' role='measure' type='quantitative' />
            <column caption='Population (Total US Lung CA pop.csv)' datatype='integer' name='[Population (Total_US_Lung_CA_pop.csv)]' role='measure' type='quantitative' />
            <column caption='Total Deaths Percent (Total US Lung CA pop.csv)' datatype='real' name='[Total Deaths Percent (Total_US_Lung_CA_pop.csv)]' role='measure' type='quantitative' />
            <column caption='Year (Total US Lung CA pop.csv)' datatype='integer' name='[Year (Total_US_Lung_CA_pop.csv)]' role='dimension' type='quantitative' />
            <column-instance column='[Country (Total_US_Lung_CA_pop.csv)]' derivation='None' name='[none:Country (Total_US_Lung_CA_pop.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths (Total US Lung CA pop.csv) (bin)]' derivation='None' name='[none:Deaths (Total US Lung CA pop.csv) (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (Total_US_Lung_CA_pop.csv)]' derivation='None' name='[none:Year (Total_US_Lung_CA_pop.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population (Total_US_Lung_CA_pop.csv)]' derivation='Sum' name='[sum:Population (Total_US_Lung_CA_pop.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Deaths Percent (Total_US_Lung_CA_pop.csv)]' derivation='Sum' name='[sum:Total Deaths Percent (Total_US_Lung_CA_pop.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_US_Lung_CA_pop.csv):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country (Total_US_Lung_CA_pop.csv):nk]' />
              <groupfilter function='member' level='[none:Country (Total_US_Lung_CA_pop.csv):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_US_Lung_CA_pop.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_US_Lung_CA_pop.csv):nk]' value='44' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='22' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_US_Lung_CA_pop.csv):nk]' value='26' />
            <format attr='display' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_US_Lung_CA_pop.csv):nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.9502761363983154' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Deaths (Total US Lung CA pop.csv) (bin):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='6.110161304473877' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Population (Total_US_Lung_CA_pop.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='6.110161304473877' />
                <format attr='mark-color' value='#f1ce63' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Total Deaths Percent (Total_US_Lung_CA_pop.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='6.110161304473877' />
                <format attr='mark-color' value='#9d7660' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Deaths (Total US Lung CA pop.csv) (bin):qk] + ([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Population (Total_US_Lung_CA_pop.csv):qk] + [federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Total Deaths Percent (Total_US_Lung_CA_pop.csv):qk]))</rows>
        <cols>([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_US_Lung_CA_pop.csv):nk] * [federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year (Total_US_Lung_CA_pop.csv):qk])</cols>
      </table>
      <simple-id uuid='{AED28C2B-2978-42E1-86F3-777969C8144C}' />
    </worksheet>
    <worksheet name='World Liver CA'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='36'>Liver Cancer, and Alcohol Consumption:  2012 - 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Total_Lung_CA_pop+' name='federated.0hbgkls0rddsdt19ob8h80ohlc9t' />
          </datasources>
          <datasource-dependencies datasource='federated.0hbgkls0rddsdt19ob8h80ohlc9t'>
            <column caption='Country (Total Liver CA pop.csv)' datatype='string' name='[Country (Total_Liver_CA_pop.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths (Total Liver CA pop.csv)' datatype='integer' name='[Deaths (Total_Liver_CA_pop.csv)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Litres per Person]' role='measure' type='quantitative' />
            <column caption='Population (Total Liver CA pop.csv)' datatype='integer' name='[Population (Total_Liver_CA_pop.csv)]' role='measure' type='quantitative' />
            <column caption='Total Deaths Percent (Total Liver CA pop.csv)' datatype='real' name='[Total Deaths Percent (Total_Liver_CA_pop.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Litres per Person]' derivation='Avg' name='[avg:Litres per Person:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population (Total_Liver_CA_pop.csv)]' derivation='Avg' name='[avg:Population (Total_Liver_CA_pop.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Deaths Percent (Total_Liver_CA_pop.csv)]' derivation='Avg' name='[avg:Total Deaths Percent (Total_Liver_CA_pop.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country (Total_Liver_CA_pop.csv)]' derivation='None' name='[none:Country (Total_Liver_CA_pop.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths (Total_Liver_CA_pop.csv)]' derivation='Sum' name='[sum:Deaths (Total_Liver_CA_pop.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_Liver_CA_pop.csv):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country (Total_Liver_CA_pop.csv):nk]' />
              <groupfilter function='member' level='[none:Country (Total_Liver_CA_pop.csv):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_Liver_CA_pop.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_Liver_CA_pop.csv):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Population:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Total Deaths Percent:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Litres per Person:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Litres per Person:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_Liver_CA_pop.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_Liver_CA_pop.csv):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Population:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Total Deaths Percent:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Litres per Person:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Litres per Person:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population (Total_Liver_CA_pop.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_Liver_CA_pop.csv):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Population:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Total Deaths Percent:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Litres per Person:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Litres per Person:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent (Total_Liver_CA_pop.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_Liver_CA_pop.csv):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Population:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Total Deaths Percent:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Litres per Person:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Litres per Person:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Litres per Person:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_Liver_CA_pop.csv):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Population:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Total Deaths Percent:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Litres per Person:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Litres per Person:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_Liver_CA_pop.csv):nk]</rows>
        <cols>([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_Liver_CA_pop.csv):qk] + ([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population (Total_Liver_CA_pop.csv):qk] + ([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent (Total_Liver_CA_pop.csv):qk] + [federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Litres per Person:qk])))</cols>
      </table>
      <simple-id uuid='{31B05A9C-1671-475E-8306-1530C2C5D73D}' />
    </worksheet>
    <worksheet name='World Liver CA map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='36'>Liver Cancer &amp; Alcohol 2012-2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Total_Lung_CA_pop+' name='federated.0hbgkls0rddsdt19ob8h80ohlc9t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0hbgkls0rddsdt19ob8h80ohlc9t'>
            <column caption='Country (Total Liver CA pop.csv)' datatype='string' name='[Country (Total_Liver_CA_pop.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths (Total Liver CA pop.csv)' datatype='integer' name='[Deaths (Total_Liver_CA_pop.csv)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Litres per Person]' role='measure' type='quantitative' />
            <column caption='Population (Total Liver CA pop.csv)' datatype='integer' name='[Population (Total_Liver_CA_pop.csv)]' role='measure' type='quantitative' />
            <column caption='Total Deaths Percent (Total Liver CA pop.csv)' datatype='real' name='[Total Deaths Percent (Total_Liver_CA_pop.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Litres per Person]' derivation='Avg' name='[avg:Litres per Person:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population (Total_Liver_CA_pop.csv)]' derivation='Avg' name='[avg:Population (Total_Liver_CA_pop.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Deaths Percent (Total_Liver_CA_pop.csv)]' derivation='Avg' name='[avg:Total Deaths Percent (Total_Liver_CA_pop.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country (Total_Liver_CA_pop.csv)]' derivation='None' name='[none:Country (Total_Liver_CA_pop.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths (Total_Liver_CA_pop.csv)]' derivation='Sum' name='[sum:Deaths (Total_Liver_CA_pop.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[Longitude (generated)]' field-type='quantitative' max='30078806.679799393' min='-23944956.601198711' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[Latitude (generated)]' field-type='quantitative' max='21128596.476385094' min='-13790369.526686655' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_Liver_CA_pop.csv):qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_Liver_CA_pop.csv):qk]' />
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_Liver_CA_pop.csv):nk]' />
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Litres per Person:qk]' />
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_Liver_CA_pop.csv):qk]' />
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population (Total_Liver_CA_pop.csv):qk]' />
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent (Total_Liver_CA_pop.csv):qk]' />
              <geometry column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12'>Country:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_Liver_CA_pop.csv):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12'>Avg. Litres per Person:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Litres per Person:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12'>Avg. Population:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12'>Deaths:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12'>Avg. Total Deaths Percent:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent (Total_Liver_CA_pop.csv):qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[Latitude (generated)]</rows>
        <cols>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{39081160-C889-4128-902D-345A5F67870C}' />
    </worksheet>
    <worksheet name='World Lung CA'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='36'>Lung Cancer, and % of smokers age +15:   2012-2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Total_Lung_CA_pop+' name='federated.0hbgkls0rddsdt19ob8h80ohlc9t' />
          </datasources>
          <datasource-dependencies datasource='federated.0hbgkls0rddsdt19ob8h80ohlc9t'>
            <column caption='Rank' datatype='integer' name='[Calculation_148337320951619585]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Deaths]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[Percent of Smokers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Deaths Percent]' role='measure' type='quantitative' />
            <column-instance column='[Percent of Smokers]' derivation='Avg' name='[avg:Percent of Smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Deaths Percent]' derivation='Avg' name='[avg:Total Deaths Percent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_148337320951619585]' derivation='User' name='[usr:Calculation_148337320951619585:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]' value='144' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#00000000' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population:qk]' value='18' />
            <format attr='font-size' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent:qk]' value='18' />
            <format attr='font-size' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Percent of Smokers:qk]' value='18' />
            <format attr='font-size' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk]' value='18' />
            <format attr='font-size' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]' value='16' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' id='refline1' value='5' />
            <format attr='stroke-size' id='refline0' value='5' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-size' id='refline2' value='5' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='stroke-size' id='refline3' value='5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <reference-line axis-column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Percent of Smokers:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Percent of Smokers:qk]' z-order='1' />
            <reference-line axis-column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent:qk]' z-order='2' />
            <reference-line axis-column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population:qk]' z-order='3' />
            <reference-line axis-column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk]' z-order='4' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[usr:Calculation_148337320951619585:qk:1]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4722652435302734' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Percent of Smokers:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#9d7660' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]</rows>
        <cols>([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk] + ([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population:qk] + ([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent:qk] + [federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Percent of Smokers:qk])))</cols>
      </table>
      <simple-id uuid='{475C03C9-B72F-4FD4-82DE-BC37313E3C7B}' />
    </worksheet>
    <worksheet name='World Lung CA map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='36'>Lung Cancer &amp; Smoking 2012-2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Total_Lung_CA_pop+' name='federated.0hbgkls0rddsdt19ob8h80ohlc9t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0hbgkls0rddsdt19ob8h80ohlc9t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[Percent of Smokers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Deaths Percent]' role='measure' type='quantitative' />
            <column-instance column='[Percent of Smokers]' derivation='Avg' name='[avg:Percent of Smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Deaths Percent]' derivation='Avg' name='[avg:Total Deaths Percent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[Longitude (generated)]' field-type='quantitative' max='67629055.190555573' min='10820138.731369153' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[Latitude (generated)]' field-type='quantitative' max='18713395.10476198' min='-8259735.2408448495' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk]' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]' />
              <color column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk]' />
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent:qk]' />
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population:qk]' />
              <lod column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Percent of Smokers:qk]' />
              <geometry column='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12'>Country:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12'>Avg. Percent of Smokers Age +15:	</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Percent of Smokers:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12'>Avg. Population:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Population:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12'>Deaths:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12'>Avg. Total Deaths Percent:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[Latitude (generated)]</rows>
        <cols>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CE195F30-4066-4B50-ABF6-A3ADE41B6C71}' />
    </worksheet>
    <worksheet name='Youtube example'>
      <table>
        <view>
          <datasources>
            <datasource caption='Total_Lung_CA_pop+' name='federated.0hbgkls0rddsdt19ob8h80ohlc9t' />
          </datasources>
          <datasource-dependencies datasource='federated.0hbgkls0rddsdt19ob8h80ohlc9t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Total Deaths Percent]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Total Deaths Percent]' derivation='Avg' name='[avg:Total Deaths Percent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='CountD' name='[ctd:Country:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[ctd:Country:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols>([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[ctd:Country:qk] + ([federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year:qk] + [federated.0hbgkls0rddsdt19ob8h80ohlc9t].[avg:Total Deaths Percent:qk]))</cols>
      </table>
      <simple-id uuid='{12983189-3D28-4024-9EF3-4102288D4C38}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{80AF3883-4079-45A6-9A49-E1E2727360FD}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='World Lung CA heatmap'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='3' is-centered='0' is-scaled='1' param='C:/Users/derek/Downloads/Lung CA deaths heatmap.png' type-v2='bitmap' w='98438' x='781' y='1042'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='7' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone fixed-size='280' h='97916' id='3' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/derek/Downloads/Lung CA deaths heatmap.png' type-v2='bitmap' w='98438' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8FB25519-18A6-4700-8F54-F1C4AF9F2BC3}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Youtube example'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{991C82A6-8557-4C50-9C44-7D5D21F63375}' />
    </window>
    <window class='worksheet' maximized='true' name='World Lung CA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year (Total_US_Lung_CA_pop.csv):qk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C76999DD-519E-42F9-8B48-D43CE61D8A99}' />
    </window>
    <window class='worksheet' name='US Lung CA line graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_US_Lung_CA_pop.csv):nk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Deaths (Total US Lung CA pop.csv) (bin):qk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year (Total_US_Lung_CA_pop.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DD831FF-444B-4438-A137-BEFE4D727047}' />
    </window>
    <window class='dashboard' name='World Lung CA heatmap'>
      <viewpoints />
      <active id='3' />
      <simple-id uuid='{4BD2060C-D261-4B14-BCA4-E421D2FB3F0D}' />
    </window>
    <window class='worksheet' name='World Lung CA map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Daily_Smokers.csv):nk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_US_Lung_CA_pop.csv):nk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Measure (Daily_Smokers.csv):nk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Measure:nk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Variable:nk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year:qk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Population:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{DCDC8A9F-CC94-4B3E-8B1A-EE327D9E0C4F}' />
    </window>
    <window class='worksheet' name='World Liver CA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_Liver_CA_pop.csv):nk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_US_Liver_CA_pop.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59D5FA02-A5C9-4FDC-8D97-0076339DF796}' />
    </window>
    <window class='worksheet' name='US Liver CA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_US_Liver_CA_pop.csv1):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B09981A3-67BB-48FC-A239-B3C63DFE6BC3}' />
    </window>
    <window class='worksheet' name='World Liver CA map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[sum:Deaths (Total_Liver_CA_pop.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country (Total_Liver_CA_pop.csv):nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{60AB517A-2E3D-4F7C-A6CA-0BD1DD3CDB5E}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{C3F088E4-CCB2-41AC-BD3B-E7BFD2983DD5}' />
    </window>
    <window class='worksheet' name='Country lines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Country:nk]</field>
            <field>[federated.0hbgkls0rddsdt19ob8h80ohlc9t].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14CA4A15-E60F-4E64-8CE5-7D57C0BBAAB8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Country lines' width='192'>
      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
      zaoW8/QPKwFALL+lbXrCK0BH5FyA7gh5goZ5GGRVJQwj4owVK3fCcx2aD7F/0FyPcIgoTp6e
      JS6vpb6XBbrt0Wtluy6u7wmZQACWodPpZZt4VF29Xw0mU/vi8LPBQgRIkohbt24TBl2W1zYJ
      ui2anR4bq0sjD3T3mnXCoDfUfSmpBnH44CGN23cgSl/iNNUg2JGVLU4S1pt1giGhfseyaO8g
      QD8I6LbbRMPaGx7NHQrVcneDbtQhHiIHluXduTmDO3eI7604zplTNO8Ot72jOOHOWo12ir5d
      kaV9orheu0W7XiXopqsnNS9HfycBqlUIAohjlOl5+iu3h44FoFG5Rn+IOao7PkHGTNSmY9Hd
      49Zst9s0mw3a7fSxe7ZFY4dZU+uE9KNkqGkkspppxTzR1oM9VRLHhOvrxI2GGAHCXoCtRnx4
      fZleu0EQQaNaZmV5GcsydyXG2vnf4juvETRr1JZu7XsvDEMkzaXfGehq+t1NOrf/V/qVH9Hv
      bqa2j+/pfsIw5OOVJd5dustbt2+kttU1jVa7ff/vqx99QK1S5uYnV1Lbm5pNs9e4//ef3Po9
      NrtrXK68n96/k6NTHehkgo0Nyv/TP6f1/dcINjZwzp2hcuV66ufCMOQHP73Fd5+DYOkAABnl
      SURBVH98g//7ex/ve6+Q89jY3Nr12tvf+SMqq4u88xf/OrU/2XYIapX7fyd/+RdQ3iK+cR1K
      c/TX7wwdS6u+woev/bfcvfSvaNVX9r2fIBH399yHOCaK99/vMBwoaHf+/dK3/5SNtTVe+vaf
      pra3TZ1a88F9euValXI75OZWJ7W9oikE3d6OsUT3dUP7xmJbhI3m/b+bf/UG7TffovIvf1eM
      AEGryrWVKp4WU6616DZrLC6vUSgWuXt3cZcWaOd/3swCkqJi5Uv73lNVFdUqkPQbg3/rORTn
      HLI5h6rnUtsrsgbSQIdzLJfHM0yO54upbT3Hpdfr3f+7NDOLoigUpqZS2+esPO1+8/7fZ/0L
      6LLBnL2Q2t7Kleg3q6iqipbPYzzxGbTjC2j5PIUL56leu5X+m1WV88dLlHyLp09P73tvdnaK
      Srm667WF80+jaDrz5y6m9mfkCySd9v2/pZMnQdeRp6bRcyXibnPoWEynRH72ObziZzCd9Psk
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='99' name='US Liver CA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US Lung CA line graph' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='World Liver CA' width='192'>
      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
      nAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='World Liver CA map' width='192'>
      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
      W0e68gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='World Lung CA' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='World Lung CA heatmap' width='192'>
      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
      Dv1+HQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='World Lung CA map' width='192'>
      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
      TGqUABSTmv8PAYqcvWQ+uB8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='79' name='Youtube example' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABPCAYAAAC9OsoKAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEBUlEQVR4nO3bXUhbZxzH8V898xUsVqNzjr0JaSdjtWVS6hBa2CgMBsoKm8jKHAwqdDcF
      YeDFir3YfYfghJWN7iaDUQyUlUJvZN7MBmphIDWdHWPSoKmKmSY1nGYXjml6oY/z5WD+38+V
      nIj+c3y+nCcm50Aul8sJMKoo6AGAIBEATCMAmEYAMI0AYBoBwDQCgGnPbfYNsVhsL+YAArFp
      AJLU0tKy23OYkUqlVFlZGfQYBWO755MtEExzugK090V2ew4gEFwBYBoBwDQCgGkEANMIAKYR
      AEwjAJhGADCNAGAaAcA0AoBpBADTCACmOX0aNPpV527PYQb3A+ws7gcAtsHpCsBtkShU3BK5
      x5aXl1VRURH0GAVju+eTLRBMIwCYRgAwjQBgGgHsMV4A76ztnk8CgGkEANMIAKYRAEwjAJjm
      9FGIVUt6EB3UwK240l5IR89eUM/pBnm7N1sBGdfV84MaW3fkxY5+fflefWAT7TfZ+Sn9OnJT
      v4z+rWO9Xyjv1C09UHRwQLfiaXmhozp7oUenG9xWpnMAmfGIrk2fVN+VXtWkJxUdGNKNxn61
      v7zVp2LQ7IySrZ9rqPvNoCfZp8YV+Tqmhg+79HHpdf2W91hG45Frmj7Zpyu9NUpPRjUwdEON
      /e1yWZqOW6CM7o4mdaqzTXXFknfwsNo7wroXe7j152LR46S852uDnmIfO6Zzlz7TO02HVPzs
      Q5m7Gk2eUmdbnYrl6eDhdnWE78l1aToGsKAFhdVYvXbEO9Kk+uScfLcfYFpmfk6HXmC7sysW
      FqRwo9aWpqcjTfVKzrmtTMct0IqeFJWrfP0hz5OXeKRZSfxpN5ZKLWrs+/OrrwFKKvVq8wf6
      5NO35bhNxUZWnqioPG9lyvM8JR65rUzHAEpU+jSt9PpDvi+/vk5c2DdXe6ZPQ2dWv/YzjzV5
      +zt981OtLn8UDnawQlBSqqfpvJUp3/dVX+e2Mh23QFWqUlxTc+t+yf0JJULV/Bdoi7yyGjW9
      /65e+f2hZoMephBUVUnxKa0tTV/3JxIKVbutTMcAynS8LaSRyKhmspK/OKnocFzNLa/9n5GN
      Sej2tz/ozl9LykpSdl4T13/Wn2+8ztVzJ5QdV1toRJHRGWXla3EyquF4s1yX5oFcLpfb6Bti
      sdi/t0Tmvw9wouuiultDXAEcZGfuKHL1R439kdKKV66XWs+pp+sthTh5bhI3dfnSsKafOfzf
      eyl57wOcUNfFbrU6ntwtBAAUHj4KAdMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBM
      IwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhG
      ADCNAGDaP6TuBZF/2cRaAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
